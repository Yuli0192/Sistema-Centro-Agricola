<?xml version="1.0"?>
<doc>
<assembly>
<name>
DataAccess
</name>
</assembly>
<members>
<member name="M:DataAccess.ClsDataAccess.agregarProducto(System.Int32,System.String,System.Int32)">
	<summary>
 Metodo que registra un nuevo producto a la Base de datos
 </summary>
	<param name="pnombre"></param>
	<param name="punidad"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.asignarProductoSocio(System.Int32,System.Int32,System.Int32)">
	<summary>
 Metodo que registra un nuevo producto al socio a la Base de datos
 </summary>
	<param name="pcodSocio"></param>
	<param name="pcodProducto"></param>
	<param name="pcodPermiso"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.modificarProducto(System.Int32,System.String,System.Int32)">
	<summary>
 Metodo que modificar un nuevo producto a la Base de datos
 </summary>
	<param name="pnombre"></param>
	<param name="punidad"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.eliminarProducto(System.Int32)">
	<summary>
 Metodo que elimina un producto a la Base de datos
 </summary>
	<param name="pcod"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.buscarProductoNombre(System.String)">
	<summary>
 Método de la clase encargada de buscar un registro de producto a la base de datos 
 </summary>
	<param name="pnombre"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.listarProductos">
	<summary>
 Método de la clase encargada de buscar todos los productos en la DB
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.agregarSocio(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime)">
	<summary>
 Metodo que registra un nuevo socio a la Base de datos
 </summary>
	<param name="pcod"></param>
	<param name="pcedula"></param>
	<param name="pnombre"></param>
	<param name="pdireccionFinca"></param>
	<param name="pdireccionCasa"></param>
	<param name="ptelefono"></param>
	<param name="pcorreo"></param>
	<param name="pfechaIngreso"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.asignarFeriaSocio(System.Int32,System.Int32)">
	<summary>
 Metodo para asignar una feria al socio a la Base de datos
 </summary>
	<param name="pcodSocio"></param>
	<param name="pcodFeria"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.modificarSocio(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime)">
	<summary>
 Metodo que registra un nuevo socio a la Base de datos
 </summary>
	<param name="pcod"></param>
	<param name="pcedula"></param>
	<param name="pnombre"></param>
	<param name="ptelefono"></param>
	<param name="pcorreo"></param>
	<param name="pfechaIngreso"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.eliminarSocio(System.Int32)">
	<summary>
 Metodo que elimina un socio a la Base de datos
 </summary>
	<param name="pcod"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.activarSocio(System.Int32)">
	<summary>
 Metodo que activa un socio a la Base de datos
 </summary>
	<param name="pcod"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.buscarCriterioSocio(System.String)">
	<summary>
 Método de la clase encargada de buscar un registro de socio a la base de datos 
 </summary>
	<param name="pcriterio"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.buscarCriterioSocioInactivo(System.String)">
	<summary>
 Método de la clase encargada de buscar un registro de socio a la base de datos 
 </summary>
	<param name="pcriterio"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.buscarSocioProducto(System.String)">
	<summary>
 Método de la clase encargada de buscar un registro de socio por medio del producto a la base de datos 
 </summary>
	<param name="pproducto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.listarSocios">
	<summary>
 Método de la clase encargada de buscar todos los socios en la DB
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.listarSociosInactivo">
	<summary>
 Método de la clase encargada de buscar todos los socios en la DB
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.agregarAuxiliar(System.Int32,System.String,System.String,System.String,System.String)">
	<summary>
 Metodo que registra un nuevo auxiliar a la Base de datos
 </summary>
	<param name="pcod"></param>
	<param name="pcedula"></param>
	<param name="pnombre"></param>
	<param name="ptelefono"></param>
	<param name="pparentesco"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.modificarAuxiliar(System.Int32,System.String,System.String,System.String,System.String)">
	<summary>
 Metodo que modifica un auxiliar a la Base de datos
 </summary>
	<param name="pcod"></param>
	<param name="pcedula"></param>
	<param name="pnombre"></param>
	<param name="ptelefono"></param>
	<param name="pparentesco"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.eliminarAuxiliar(System.Int32)">
	<summary>
 Metodo que elimina un auxiliar a la Base de datos
 </summary>
	<param name="pcod"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.activarAuxiliar(System.Int32)">
	<summary>
 Metodo que activa un auxiliar a la Base de datos
 </summary>
	<param name="pcod"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.buscarCriterioAuxiliar(System.String)">
	<summary>
 Método de la clase encargada de buscar un registro de auxiliar a la base de datos 
 </summary>
	<param name="pcriterio"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.buscarCriterioAuxiliarInactivo(System.String)">
	<summary>
 Método de la clase encargada de buscar un registro de auxiliar inactivo a la base de datos 
 </summary>
	<param name="pcriterio"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.buscarAuxiliarProducto(System.String)">
	<summary>
 Método de la clase encargada de buscar un registro de auxiliar a la base de datos 
 </summary>
	<param name="pproducto"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.listarAuxiliares">
	<summary>
 Método de la clase encargada de buscar todos los auxiliares en la DB
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.listarAuxiliaresInactivo">
	<summary>
 Método de la clase encargada de buscar todos los auxiliares inactivo en la DB
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.agregarFeria(System.Int32,System.String)">
	<summary>
 Metodo que registra una nueva feria a la Base de datos
 </summary>
	<param name="pcod"></param>
	<param name="pnombre"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.buscarFeriaNombre(System.String)">
	<summary>
 Método de la clase encargada de buscar un registro de la feria a la base de datos 
 </summary>
	<param name="pnombre"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.listarFerias">
	<summary>
 Método de la clase encargada de buscar todos las ferias en la DB
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.listarFeriasAsisteSocio(System.Int32)">
	<summary>
 Método de la clase encargada de buscar todos las ferias que asiste el socio en la DB
 </summary>
	<param name="pcodigo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.listarFeriasNoAsisteSocio(System.Int32)">
	<summary>
 Método de la clase encargada de buscar todos las ferias que no asiste el socio en la DB
 </summary>
	<param name="pcodigo"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.eliminarFeriaSocio(System.Int32,System.Int32)">
	<summary>
 Metodo que elimina una feria que asiste el socio a la Base de datos
 </summary>
	<param name="pcodFeria"></param>
	<param name="pcodSocio"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.obtenerMayorIdFeria">
	<summary>
 Funcion que se encarga de buscar el maximo id en la tabla de ferias en la base de datos.
 </summary>
	<returns>Maximo id</returns>
</member><member name="M:DataAccess.ClsDataAccess.agregarFinca(System.String,System.String,System.Int32)">
	<summary>
 Metodo que registra un nuevo socio a la Base de datos
 </summary>
	<param name="pnombre"></param>
	<param name="pdireccion"></param>
	<param name="parea"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.asignarFincaSocio(System.Int32,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
	<summary>
 Método de la clase, encargada de asignar la finca al socio.
 </summary>
	<param name="pcodFinca"></param>
	<param name="pcodSocio"></param>
	<param name="pobservacion"></param>
	<param name="ptipoContrato"></param>
	<param name="pfechaContrato"></param>
	<param name="pfechaVenceContrato"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.modificarFinca(System.Int32,System.String,System.String,System.Int32)">
	<summary>
 Metodo que modifica una finca a la Base de datos
 </summary>
	<param name="pcod"></param>
	<param name="pnombre"></param>
	<param name="pdireccion"></param>
	<param name="parea"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.buscarCriterioFinca(System.String)">
	<summary>
 Método de la clase encargada de buscar un registro de la finca a la base de datos 
 </summary>
	<param name="pcriterio"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.listarFincas">
	<summary>
 Método de la clase encargada de buscar todas las fincas en la DB
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.obtenerTotalAreaFinca">
	<summary>
 Funcion que se encarga de obtener el total del area de las fincas en la base de datos.
 </summary>
	<returns>Total área</returns>
</member><member name="M:DataAccess.ClsDataAccess.agregarPermiso(System.Int32,System.Int32,System.DateTime,System.DateTime)">
	<summary>
 Metodo que registra una nuevo permiso a la Base de datos
 </summary>
	<param name="pcodPermiso"></param>
	<param name="pcodSocio"></param>
	<param name="pfechacrea"></param>
	<param name="pfechavence"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.agregarPermisoAuxiliar(System.Int32,System.Int32)">
	<summary>
 Metodo que asignar permiso al auxiliar a la Base de datos
 </summary>
	<param name="pcodPermiso"></param>
	<param name="pcodAuxiliar"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.obtenerMayorIdPermiso">
	<summary>
 Funcion que se encarga de buscar el maximo id en la tabla de permiso en la base de datos.
 </summary>
	<returns>Maximo id</returns>
</member><member name="M:DataAccess.ClsDataAccess.buscarCriterioPermiso(System.Int32)">
	<summary>
 Método de la clase encargada de buscar un registro de un permiso a la base de datos 
 </summary>
	<param name="pcriterio"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.listarPermisos">
	<summary>
 Método de la clase encargada de buscar todos los permisos en la DB
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.buscarPermisoVencidos">
	<summary>
 Método de la clase encargada de buscar los permisos vencidos a la base de datos 
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.agregarInspeccion(System.Int32,System.DateTime,System.DateTime,System.Int32)">
	<summary>
 Metodo que registra una nueva inspeccion a la Base de datos
 </summary>
	<param name="pcodInsp"></param>
	<param name="pcodSocio"></param>
	<param name="pfechacrea"></param>
	<param name="pfechavence"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.obtenerMayorIdInspeccion">
	<summary>
 Funcion que se encarga de buscar el maximo id en la tabla de inspeccion en la base de datos.
 </summary>
	<returns>Maximo id</returns>
</member><member name="M:DataAccess.ClsDataAccess.buscarCarnetVencidos">
	<summary>
 Método de la clase encargada de buscar los carnet vencidos a la base de datos 
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.agregarCliente(System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.Int32)">
	<summary>
 Metodo que registra un nuevo cliente a la Base de datos
 </summary>
	<param name="pcedula"></param>
	<param name="pnombre"></param>
	<param name="pdireccion"></param>
	<param name="ptelefono"></param>
	<param name="pfechaIngreso"></param>
	<param name="psalarioBase"></param>
	<param name="pcuota"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.modificarCliente(System.String,System.String,System.String,System.String,System.DateTime,System.Int32,System.Int32)">
	<summary>
 Metodo que registra un nuevo cliente a la Base de datos
 </summary>
	<param name="pcedula"></param>
	<param name="pnombre"></param>
	<param name="pdireccion"></param>
	<param name="ptelefono"></param>
	<param name="pfechaIngreso"></param>
	<param name="psalarioBase"></param>
	<param name="pcuota"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.eliminarCliente(System.String)">
	<summary>
 Metodo que elimina un cliente a la Base de datos
 </summary>
	<param name="pcedula"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.activarCliente(System.String,System.Int32)">
	<summary>
 Metodo que activa un cliente a la Base de datos
 </summary>
	<param name="pcedula"></param>
	<param name="pcantiIng"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.buscarCriterioCliente(System.String)">
	<summary>
 Método de la clase encargada de buscar un registro de cliente a la base de datos 
 </summary>
	<param name="pcriterio"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.buscarCriterioClienteInactivo(System.String)">
	<summary>
 Método de la clase encargada de buscar un registro de cliente a la base de datos 
 </summary>
	<param name="pcriterio"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.listarClientes">
	<summary>
 Método de la clase encargada de buscar todos los cliente en la DB
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.listarClientesInactivo">
	<summary>
 Método de la clase encargada de buscar todos los clientes en la DB
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.agregarOrden(System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Int32,System.String)">
	<summary>
 Metodo que registra una nueva orden a la Base de datos
 </summary>
	<param name="pcedulaCliente"></param>
	<param name="pmes"></param>
	<param name="panno"></param>
	<param name="pfechaCrea"></param>
	<param name="pfechaVence"></param>
	<param name="pmonto"></param>
	<param name="pestado"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.buscarOrdenesPendientes(System.String)">
	<summary>
 Método de la clase encargada de buscar un registro de cliente a la base de datos 
 </summary>
	<param name="pcriterio"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.modificarMulta(System.Int32)">
	<summary>
 Metodo que modifica la multa a la Base de datos
 </summary>
	<param name="pcod"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.obtenerMontoTotalOrden(System.Int32)">
	<summary>
 Funcion que se encarga de obtener el total del area de las fincas en la base de datos.
 </summary>
	<param name="pcod"></param>
	<returns>Monto total</returns>
</member><member name="M:DataAccess.ClsDataAccess.cancelarOrden(System.Int32,System.DateTime,System.String)">
	<summary>
 Metodo que modifica el estado de la orden  a la Base de datos
 </summary>
	<param name="pcod"></param>
	<param name="pfechaPago"></param>
	<param name="pestado"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.agregarUsuario(System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 Metodo que registra un nuevo usuario a la Base de datos
 </summary>
	<param name="pcedula"></param>
	<param name="pnombre"></param>
	<param name="papellido1"></param>
	<param name="papellido2"></param>
	<param name="pcontrasenna"></param>
	<param name="prol"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.modificarUsuario(System.String,System.String,System.String,System.String,System.String)">
	<summary>
 Metodo que modifica los datos de un usuario a la Base de datos
 </summary>
	<param name="pcedula"></param>
	<param name="pnombre"></param>
	<param name="papellido1"></param>
	<param name="papellido2"></param>
	<param name="prol"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.eliminarUsuario(System.String)">
	<summary>
 Metodo que elimina un usuario a la Base de datos
 </summary>
	<param name="pcedula"></param>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.buscarCriterioUsuario(System.String)">
	<summary>
 Método de la clase encargada de buscar un registro de un usuario a la base de datos 
 </summary>
	<param name="pcriterio"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.listarUsuarios">
	<summary>
 Método de la clase encargada de buscar todos los usuario en la DB
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:DataAccess.ClsDataAccess.buscarUsuarioNombreContrasenna(System.String,System.String)">
	<summary>
 Método de la clase encargada de buscar un registro de un usuario a la base de datos 
 </summary>
	<param name="pnombre"></param>
	<param name="pcontrasenna"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:DataAccess.ClsDataAccess">
	<summary>
	</summary>
	<remarks></remarks>
</member>
</members>
</doc>